
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftPONTOVIRGULArightELSEleftANDORleftMENORMAIORIGUALDIFERENTEMAIOR_IGUALMENOR_IGUALleftMAISMENOSleftVEZESDIVIDEABRECOL ABREPAR AND ARRAY ATRIBUICAO BEGIN BOOLEAN CHAR CONST DIFERENTE DIVIDE DO DOISPONTOS ELSE END FALSE FECHACOL FECHAPAR FOR FUNCTION ID IF IGUAL INTEGER MAIOR MAIOR_IGUAL MAIS MENOR MENOR_IGUAL MENOS NUMERO OF OR PALAVRA PONTO PONTOVIRGULA PROCEDURE READ REAL RECORD THEN TO TRUE TYPE VAR VEZES VIRGULA WHILE WRITEPROGRAMA : DECLARACOES BLOCODECLARACOES : DEF_CONST DEF_TIPOS DEF_VAR DEF_ROTINADEF_CONST : CONSTANTE DEF_CONST\n                 | CONSTANTE : CONST ID '=' CONST_VALOR ';'CONST_VALOR : EXP_CONSTPARAMETRO : ID\n                 | PALAVRAEXP_CONST : PARAMETRO EXP_CONST_L\n                 | '(' PARAMETRO OP_MAT EXP_CONST ')'EXP_CONST_L : OP_MAT EXP_CONST\n                   | DEF_TIPOS : TIPO DEF_TIPOS\n                 | TIPO : TYPE ID '=' TIPO_DADO ';'TIPO_DADO : INTEGER\n                 | REAL\n                 | CHAR\n                 | BOOLEAN\n                 | ARRAY '[' NUMERO ']' OF TIPO_DADO\n                 | RECORD CAMPOS END\n                 | IDDEF_VAR : VARIAVEL DEF_VAR\n               | VARIAVEL : VAR CAMPOS ';'CAMPOS : CAMPO LISTA_CAMPOSCAMPO : ID LISTA_ID ':' TIPO_DADOLISTA_ID : ',' ID LISTA_ID\n                | LISTA_COM : COMANDO PONTOVIRGULA LISTA_COM\n                 | COMANDOLISTA_CAMPOS : CAMPO PONTOVIRGULA LISTA_CAMPOS \n                   | CAMPODEF_ROTINA : ROTINA DEF_ROTINA\n                  | ROTINA : FUNCTION ID PARAM_ROTINA ':' TIPO_DADO BLOCO_ROTINA\n              | PROCEDURE ID PARAM_ROTINA BLOCO_ROTINAPARAM_ROTINA : '(' CAMPOS ')'\n                    | BLOCO_ROTINA : DEF_VAR BLOCOBLOCO : BEGIN COMANDO LISTA_COM ENDCOMANDO : ID atribuicao_regra\n               | WHILE EXP_COM DO BLOCO\n               | IF EXP_COM THEN BLOCO else_regra\n               | FOR FOR_PARAMS DO BLOCO\n               | WRITE CONST_VALOR\n               | READ IDatribuicao_regra : ATRIBUICAO EXPelse_regra : ELSE BLOCO\n                  | FOR_PARAMS : ID ATRIBUICAO PARAMETRO TO PARAMETROEXP : PARAMETRO OP_MAT EXP\n           | PARAMETROEXP_COM : PARAMETRO OP_COMP PARAMETRO\n               | PARAMETROOP_MAT : '+'\n              | '-'\n              | '*'\n              | '/'OP_COMP : '>'\n               | '<'\n               | IGUAL\n               | DIFERENTE\n               | MAIOR_IGUAL\n               | MENOR_IGUAL"
    
_lr_action_items = {'TYPE':([0,3,4,9,11,90,106,],[-4,10,-4,10,-3,-5,-15,]),'VAR':([0,3,4,8,9,11,21,23,76,77,82,84,85,86,87,90,102,106,122,126,127,132,],[-4,-14,-4,22,-14,-3,22,-13,-39,-25,-22,-16,-17,-18,-19,-5,22,-15,-21,22,-38,-20,]),'FUNCTION':([0,3,4,8,9,11,20,21,23,43,46,53,77,90,106,116,128,130,],[-4,-14,-4,-24,-14,-3,44,-24,-13,44,-23,-41,-25,-5,-15,-37,-40,-36,]),'PROCEDURE':([0,3,4,8,9,11,20,21,23,43,46,53,77,90,106,116,128,130,],[-4,-14,-4,-24,-14,-3,45,-24,-13,45,-23,-41,-25,-5,-15,-37,-40,-36,]),'BEGIN':([0,2,3,4,8,9,11,20,21,23,42,43,46,53,56,64,65,74,76,77,82,84,85,86,87,90,102,106,111,116,117,122,126,127,128,130,132,],[-4,7,-14,-4,-24,-14,-3,-35,-24,-13,-2,-35,-23,-41,7,7,7,-34,-39,-25,-22,-16,-17,-18,-19,-5,-24,-15,7,-37,7,-21,-24,-38,-40,-36,-20,]),'CONST':([0,4,90,],[5,5,-5,]),'$end':([1,6,53,],[0,-1,-41,]),'ID':([5,7,10,13,15,16,17,18,19,22,25,28,29,32,33,37,38,39,40,41,44,45,48,50,52,53,54,55,57,58,59,60,61,62,63,66,67,68,69,70,71,72,81,82,84,85,86,87,89,92,93,95,96,98,99,101,103,104,109,110,112,114,119,122,123,125,131,132,],[12,14,24,14,32,32,36,32,41,49,32,-42,32,-7,-8,-46,-6,-12,32,-47,75,76,49,82,14,-41,-48,-53,32,-60,-61,-62,-63,-64,-65,32,-9,32,-56,-57,-58,-59,105,-22,-16,-17,-18,-19,49,32,-43,-50,-45,-11,32,49,49,82,-52,-44,32,82,-27,-21,-49,-10,82,-20,]),'WHILE':([7,13,28,32,33,37,38,39,41,52,53,54,55,67,93,95,96,98,109,110,123,125,],[15,15,-42,-7,-8,-46,-6,-12,-47,15,-41,-48,-53,-9,-43,-50,-45,-11,-52,-44,-49,-10,]),'IF':([7,13,28,32,33,37,38,39,41,52,53,54,55,67,93,95,96,98,109,110,123,125,],[16,16,-42,-7,-8,-46,-6,-12,-47,16,-41,-48,-53,-9,-43,-50,-45,-11,-52,-44,-49,-10,]),'FOR':([7,13,28,32,33,37,38,39,41,52,53,54,55,67,93,95,96,98,109,110,123,125,],[17,17,-42,-7,-8,-46,-6,-12,-47,17,-41,-48,-53,-9,-43,-50,-45,-11,-52,-44,-49,-10,]),'WRITE':([7,13,28,32,33,37,38,39,41,52,53,54,55,67,93,95,96,98,109,110,123,125,],[18,18,-42,-7,-8,-46,-6,-12,-47,18,-41,-48,-53,-9,-43,-50,-45,-11,-52,-44,-49,-10,]),'READ':([7,13,28,32,33,37,38,39,41,52,53,54,55,67,93,95,96,98,109,110,123,125,],[19,19,-42,-7,-8,-46,-6,-12,-47,19,-41,-48,-53,-9,-43,-50,-45,-11,-52,-44,-49,-10,]),'=':([12,24,],[25,50,]),'ATRIBUICAO':([14,36,],[29,66,]),'PALAVRA':([15,16,18,25,29,40,57,58,59,60,61,62,63,66,68,69,70,71,72,92,99,112,],[33,33,33,33,33,33,33,-60,-61,-62,-63,-64,-65,33,33,-56,-57,-58,-59,33,33,33,]),'(':([18,25,68,69,70,71,72,75,76,99,],[40,40,40,-56,-57,-58,-59,101,101,40,]),'PONTOVIRGULA':([26,28,32,33,37,38,39,41,53,54,55,67,78,82,84,85,86,87,93,95,96,98,109,110,119,122,123,125,132,],[52,-42,-7,-8,-46,-6,-12,-47,-41,-48,-53,-9,103,-22,-16,-17,-18,-19,-43,-50,-45,-11,-52,-44,-27,-21,-49,-10,-20,]),'END':([26,27,28,32,33,37,38,39,41,53,54,55,67,78,79,82,84,85,86,87,91,93,95,96,98,108,109,110,118,119,122,123,125,132,],[-31,53,-42,-7,-8,-46,-6,-12,-47,-41,-48,-53,-9,-33,-26,-22,-16,-17,-18,-19,-30,-43,-50,-45,-11,122,-52,-44,-32,-27,-21,-49,-10,-20,]),'DO':([30,31,32,33,35,94,124,],[56,-55,-7,-8,65,-54,-51,]),'THEN':([31,32,33,34,94,],[-55,-7,-8,64,-54,]),'>':([31,32,33,],[58,-7,-8,]),'<':([31,32,33,],[59,-7,-8,]),'IGUAL':([31,32,33,],[60,-7,-8,]),'DIFERENTE':([31,32,33,],[61,-7,-8,]),'MAIOR_IGUAL':([31,32,33,],[62,-7,-8,]),'MENOR_IGUAL':([31,32,33,],[63,-7,-8,]),'+':([32,33,39,55,73,],[-7,-8,69,69,69,]),'-':([32,33,39,55,73,],[-7,-8,70,70,70,]),'*':([32,33,39,55,73,],[-7,-8,71,71,71,]),'/':([32,33,39,55,73,],[-7,-8,72,72,72,]),';':([32,33,38,39,47,51,67,78,79,82,83,84,85,86,87,98,118,119,122,125,132,],[-7,-8,-6,-12,77,90,-9,-33,-26,-22,106,-16,-17,-18,-19,-11,-32,-27,-21,-10,-20,]),'TO':([32,33,97,],[-7,-8,112,]),')':([32,33,39,67,78,79,82,84,85,86,87,98,113,115,118,119,122,125,132,],[-7,-8,-12,-9,-33,-26,-22,-16,-17,-18,-19,-11,125,127,-32,-27,-21,-10,-20,]),',':([49,105,],[81,81,]),':':([49,75,80,100,105,120,127,],[-29,-39,104,114,-29,-28,-38,]),'INTEGER':([50,104,114,131,],[84,84,84,84,]),'REAL':([50,104,114,131,],[85,85,85,85,]),'CHAR':([50,104,114,131,],[86,86,86,86,]),'BOOLEAN':([50,104,114,131,],[87,87,87,87,]),'ARRAY':([50,104,114,131,],[88,88,88,88,]),'RECORD':([50,104,114,131,],[89,89,89,89,]),'ELSE':([53,95,],[-41,111,]),'[':([88,],[107,]),'NUMERO':([107,],[121,]),']':([121,],[129,]),'OF':([129,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'DECLARACOES':([0,],[2,]),'DEF_CONST':([0,4,],[3,11,]),'CONSTANTE':([0,4,],[4,4,]),'BLOCO':([2,56,64,65,111,117,],[6,93,95,96,123,128,]),'DEF_TIPOS':([3,9,],[8,23,]),'TIPO':([3,9,],[9,9,]),'COMANDO':([7,13,52,],[13,26,26,]),'DEF_VAR':([8,21,102,126,],[20,46,117,117,]),'VARIAVEL':([8,21,102,126,],[21,21,21,21,]),'LISTA_COM':([13,52,],[27,91,]),'atribuicao_regra':([14,],[28,]),'EXP_COM':([15,16,],[30,34,]),'PARAMETRO':([15,16,18,25,29,40,57,66,68,92,99,112,],[31,31,39,39,55,73,94,97,39,55,39,124,]),'FOR_PARAMS':([17,],[35,]),'CONST_VALOR':([18,25,],[37,51,]),'EXP_CONST':([18,25,68,99,],[38,38,98,113,]),'DEF_ROTINA':([20,43,],[42,74,]),'ROTINA':([20,43,],[43,43,]),'CAMPOS':([22,89,101,],[47,108,115,]),'CAMPO':([22,48,89,101,103,],[48,78,48,48,78,]),'EXP':([29,92,],[54,109,]),'OP_COMP':([31,],[57,]),'EXP_CONST_L':([39,],[67,]),'OP_MAT':([39,55,73,],[68,92,99,]),'LISTA_CAMPOS':([48,103,],[79,118,]),'LISTA_ID':([49,105,],[80,120,]),'TIPO_DADO':([50,104,114,131,],[83,119,126,132,]),'PARAM_ROTINA':([75,76,],[100,102,]),'else_regra':([95,],[110,]),'BLOCO_ROTINA':([102,126,],[116,130,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> DECLARACOES BLOCO','PROGRAMA',2,'p_programa','analisador_sintatico.py',18),
  ('DECLARACOES -> DEF_CONST DEF_TIPOS DEF_VAR DEF_ROTINA','DECLARACOES',4,'p_declaracoes','analisador_sintatico.py',22),
  ('DEF_CONST -> CONSTANTE DEF_CONST','DEF_CONST',2,'p_def_const','analisador_sintatico.py',27),
  ('DEF_CONST -> <empty>','DEF_CONST',0,'p_def_const','analisador_sintatico.py',28),
  ('CONSTANTE -> CONST ID = CONST_VALOR ;','CONSTANTE',5,'p_constante','analisador_sintatico.py',35),
  ('CONST_VALOR -> EXP_CONST','CONST_VALOR',1,'p_const_valor','analisador_sintatico.py',39),
  ('PARAMETRO -> ID','PARAMETRO',1,'p_parametro','analisador_sintatico.py',43),
  ('PARAMETRO -> PALAVRA','PARAMETRO',1,'p_parametro','analisador_sintatico.py',44),
  ('EXP_CONST -> PARAMETRO EXP_CONST_L','EXP_CONST',2,'p_exp_const','analisador_sintatico.py',48),
  ('EXP_CONST -> ( PARAMETRO OP_MAT EXP_CONST )','EXP_CONST',5,'p_exp_const','analisador_sintatico.py',49),
  ('EXP_CONST_L -> OP_MAT EXP_CONST','EXP_CONST_L',2,'p_exp_const_l','analisador_sintatico.py',56),
  ('EXP_CONST_L -> <empty>','EXP_CONST_L',0,'p_exp_const_l','analisador_sintatico.py',57),
  ('DEF_TIPOS -> TIPO DEF_TIPOS','DEF_TIPOS',2,'p_def_tipos','analisador_sintatico.py',65),
  ('DEF_TIPOS -> <empty>','DEF_TIPOS',0,'p_def_tipos','analisador_sintatico.py',66),
  ('TIPO -> TYPE ID = TIPO_DADO ;','TIPO',5,'p_tipo','analisador_sintatico.py',73),
  ('TIPO_DADO -> INTEGER','TIPO_DADO',1,'p_tipo_dado','analisador_sintatico.py',77),
  ('TIPO_DADO -> REAL','TIPO_DADO',1,'p_tipo_dado','analisador_sintatico.py',78),
  ('TIPO_DADO -> CHAR','TIPO_DADO',1,'p_tipo_dado','analisador_sintatico.py',79),
  ('TIPO_DADO -> BOOLEAN','TIPO_DADO',1,'p_tipo_dado','analisador_sintatico.py',80),
  ('TIPO_DADO -> ARRAY [ NUMERO ] OF TIPO_DADO','TIPO_DADO',6,'p_tipo_dado','analisador_sintatico.py',81),
  ('TIPO_DADO -> RECORD CAMPOS END','TIPO_DADO',3,'p_tipo_dado','analisador_sintatico.py',82),
  ('TIPO_DADO -> ID','TIPO_DADO',1,'p_tipo_dado','analisador_sintatico.py',83),
  ('DEF_VAR -> VARIAVEL DEF_VAR','DEF_VAR',2,'p_def_var','analisador_sintatico.py',95),
  ('DEF_VAR -> <empty>','DEF_VAR',0,'p_def_var','analisador_sintatico.py',96),
  ('VARIAVEL -> VAR CAMPOS ;','VARIAVEL',3,'p_variavel','analisador_sintatico.py',103),
  ('CAMPOS -> CAMPO LISTA_CAMPOS','CAMPOS',2,'p_campos','analisador_sintatico.py',107),
  ('CAMPO -> ID LISTA_ID : TIPO_DADO','CAMPO',4,'p_campo','analisador_sintatico.py',111),
  ('LISTA_ID -> , ID LISTA_ID','LISTA_ID',3,'p_lista_id','analisador_sintatico.py',115),
  ('LISTA_ID -> <empty>','LISTA_ID',0,'p_lista_id','analisador_sintatico.py',116),
  ('LISTA_COM -> COMANDO PONTOVIRGULA LISTA_COM','LISTA_COM',3,'p_lista_com','analisador_sintatico.py',123),
  ('LISTA_COM -> COMANDO','LISTA_COM',1,'p_lista_com','analisador_sintatico.py',124),
  ('LISTA_CAMPOS -> CAMPO PONTOVIRGULA LISTA_CAMPOS','LISTA_CAMPOS',3,'p_lista_campos','analisador_sintatico.py',131),
  ('LISTA_CAMPOS -> CAMPO','LISTA_CAMPOS',1,'p_lista_campos','analisador_sintatico.py',132),
  ('DEF_ROTINA -> ROTINA DEF_ROTINA','DEF_ROTINA',2,'p_def_rotina','analisador_sintatico.py',139),
  ('DEF_ROTINA -> <empty>','DEF_ROTINA',0,'p_def_rotina','analisador_sintatico.py',140),
  ('ROTINA -> FUNCTION ID PARAM_ROTINA : TIPO_DADO BLOCO_ROTINA','ROTINA',6,'p_rotina','analisador_sintatico.py',147),
  ('ROTINA -> PROCEDURE ID PARAM_ROTINA BLOCO_ROTINA','ROTINA',4,'p_rotina','analisador_sintatico.py',148),
  ('PARAM_ROTINA -> ( CAMPOS )','PARAM_ROTINA',3,'p_param_rotina','analisador_sintatico.py',155),
  ('PARAM_ROTINA -> <empty>','PARAM_ROTINA',0,'p_param_rotina','analisador_sintatico.py',156),
  ('BLOCO_ROTINA -> DEF_VAR BLOCO','BLOCO_ROTINA',2,'p_bloco_rotina','analisador_sintatico.py',160),
  ('BLOCO -> BEGIN COMANDO LISTA_COM END','BLOCO',4,'p_bloco','analisador_sintatico.py',165),
  ('COMANDO -> ID atribuicao_regra','COMANDO',2,'p_comando','analisador_sintatico.py',169),
  ('COMANDO -> WHILE EXP_COM DO BLOCO','COMANDO',4,'p_comando','analisador_sintatico.py',170),
  ('COMANDO -> IF EXP_COM THEN BLOCO else_regra','COMANDO',5,'p_comando','analisador_sintatico.py',171),
  ('COMANDO -> FOR FOR_PARAMS DO BLOCO','COMANDO',4,'p_comando','analisador_sintatico.py',172),
  ('COMANDO -> WRITE CONST_VALOR','COMANDO',2,'p_comando','analisador_sintatico.py',173),
  ('COMANDO -> READ ID','COMANDO',2,'p_comando','analisador_sintatico.py',174),
  ('atribuicao_regra -> ATRIBUICAO EXP','atribuicao_regra',2,'p_atribuicao_regra','analisador_sintatico.py',189),
  ('else_regra -> ELSE BLOCO','else_regra',2,'p_else_regra','analisador_sintatico.py',194),
  ('else_regra -> <empty>','else_regra',0,'p_else_regra','analisador_sintatico.py',195),
  ('FOR_PARAMS -> ID ATRIBUICAO PARAMETRO TO PARAMETRO','FOR_PARAMS',5,'p_for_params','analisador_sintatico.py',200),
  ('EXP -> PARAMETRO OP_MAT EXP','EXP',3,'p_exp','analisador_sintatico.py',206),
  ('EXP -> PARAMETRO','EXP',1,'p_exp','analisador_sintatico.py',207),
  ('EXP_COM -> PARAMETRO OP_COMP PARAMETRO','EXP_COM',3,'p_exp_com','analisador_sintatico.py',214),
  ('EXP_COM -> PARAMETRO','EXP_COM',1,'p_exp_com','analisador_sintatico.py',215),
  ('OP_MAT -> +','OP_MAT',1,'p_op_mat','analisador_sintatico.py',223),
  ('OP_MAT -> -','OP_MAT',1,'p_op_mat','analisador_sintatico.py',224),
  ('OP_MAT -> *','OP_MAT',1,'p_op_mat','analisador_sintatico.py',225),
  ('OP_MAT -> /','OP_MAT',1,'p_op_mat','analisador_sintatico.py',226),
  ('OP_COMP -> >','OP_COMP',1,'p_op_comp','analisador_sintatico.py',230),
  ('OP_COMP -> <','OP_COMP',1,'p_op_comp','analisador_sintatico.py',231),
  ('OP_COMP -> IGUAL','OP_COMP',1,'p_op_comp','analisador_sintatico.py',232),
  ('OP_COMP -> DIFERENTE','OP_COMP',1,'p_op_comp','analisador_sintatico.py',233),
  ('OP_COMP -> MAIOR_IGUAL','OP_COMP',1,'p_op_comp','analisador_sintatico.py',234),
  ('OP_COMP -> MENOR_IGUAL','OP_COMP',1,'p_op_comp','analisador_sintatico.py',235),
]
