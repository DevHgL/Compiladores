Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMPARATOR
    ELSE
    OR
    TO

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> DECLARATIONS BLOCK
Rule 2     BLOCK -> BEGIN COMMAND COMMAND_LIST END
Rule 3     DECLARATIONS -> CONST_DEF TYPE_DEF VAR_DEF ROUTINE_DEF
Rule 4     CONST_DEF -> CONSTANT CONST_DEF
Rule 5     CONST_DEF -> <empty>
Rule 6     TYPE_DEF -> TYPE_DECLARATION TYPE_DEF
Rule 7     TYPE_DEF -> <empty>
Rule 8     VAR_DEF -> VARIABLE VAR_DEF
Rule 9     VAR_DEF -> <empty>
Rule 10    ROUTINE_DEF -> ROUTINE ROUTINE_DEF
Rule 11    ROUTINE_DEF -> <empty>
Rule 12    CONSTANT -> CONST ID = CONST_VALUE ;
Rule 13    CONST_VALUE -> STRING
Rule 14    CONST_VALUE -> CONST_EXP
Rule 15    TYPE_DECLARATION -> TYPE ID = DATA_TYPE ;
Rule 16    VARIABLE -> VAR FIELD ;
Rule 17    FIELDS -> FIELD FIELD_LIST
Rule 18    FIELD -> ID ID_LIST : DATA_TYPE
Rule 19    FIELD_LIST -> ; FIELD FIELD_LIST
Rule 20    FIELD_LIST -> <empty>
Rule 21    DATA_TYPE -> INTEGER
Rule 22    DATA_TYPE -> REAL
Rule 23    DATA_TYPE -> CHAR
Rule 24    DATA_TYPE -> BOOLEAN
Rule 25    DATA_TYPE -> ARRAY [ NUMBER ] OF DATA_TYPE
Rule 26    DATA_TYPE -> RECORD FIELDS END
Rule 27    DATA_TYPE -> ID
Rule 28    ROUTINE -> FUNCTION ID ROUTINE_PARAM : DATA_TYPE ROUTINE_BLOCK
Rule 29    ROUTINE -> PROCEDURE ID ROUTINE_PARAM ROUTINE_BLOCK
Rule 30    ROUTINE_PARAM -> ( FIELDS )
Rule 31    ROUTINE_PARAM -> <empty>
Rule 32    ROUTINE_BLOCK -> VAR_DEF BLOCK
Rule 33    COMMAND_LIST -> ; COMMAND COMMAND_LIST
Rule 34    COMMAND_LIST -> <empty>
Rule 35    COMMAND -> ID ASSIGN_EXPRESSION
Rule 36    COMMAND -> WHILE COM_EXP DO BLOCK
Rule 37    COMMAND -> IF COM_EXP THEN BLOCK ELSE_ALTERNATIVE
Rule 38    COMMAND -> FOR FOR_COMMAND DO BLOCK
Rule 39    COMMAND -> WRITE CONST_VALUE
Rule 40    COMMAND -> READ ID
Rule 41    ASSIGN_EXPRESSION -> ASSIGNMENT EXP
Rule 42    COM_EXP -> PARAMETER COMP_OP PARAMETER
Rule 43    COM_EXP -> ( COM_EXP )
Rule 44    COM_EXP -> PARAMETER
Rule 45    PARAMETER -> ID
Rule 46    PARAMETER -> NUMBER
Rule 47    PARAMETER -> TRUE
Rule 48    PARAMETER -> FALSE

Terminals, with rules where they appear

(                    : 30 43
)                    : 30 43
:                    : 18 28
;                    : 12 15 16 19 33
=                    : 12 15
AND                  : 
ARRAY                : 25
ASSIGNMENT           : 41
BEGIN                : 2
BOOLEAN              : 24
CHAR                 : 23
COMPARATOR           : 
CONST                : 12
DO                   : 36 38
ELSE                 : 
END                  : 2 26
FALSE                : 48
FOR                  : 38
FUNCTION             : 28
ID                   : 12 15 18 27 28 29 35 40 45
IF                   : 37
INTEGER              : 21
NUMBER               : 25 46
OF                   : 25
OR                   : 
PROCEDURE            : 29
READ                 : 40
REAL                 : 22
RECORD               : 26
STRING               : 13
THEN                 : 37
TO                   : 
TRUE                 : 47
TYPE                 : 15
VAR                  : 16
WHILE                : 36
WRITE                : 39
[                    : 25
]                    : 25
error                : 

Nonterminals, with rules where they appear

ASSIGN_EXPRESSION    : 35
BLOCK                : 1 32 36 37 38
COMMAND              : 2 33
COMMAND_LIST         : 2 33
COMP_OP              : 42
COM_EXP              : 36 37 43
CONSTANT             : 4
CONST_DEF            : 3 4
CONST_EXP            : 14
CONST_VALUE          : 12 39
DATA_TYPE            : 15 18 25 28
DECLARATIONS         : 1
ELSE_ALTERNATIVE     : 37
EXP                  : 41
FIELD                : 16 17 19
FIELDS               : 26 30
FIELD_LIST           : 17 19
FOR_COMMAND          : 38
ID_LIST              : 18
PARAMETER            : 42 42 44
PROGRAM              : 0
ROUTINE              : 10
ROUTINE_BLOCK        : 28 29
ROUTINE_DEF          : 3 10
ROUTINE_PARAM        : 28 29
TYPE_DECLARATION     : 6
TYPE_DEF             : 3 6
VARIABLE             : 8
VAR_DEF              : 3 8 32

