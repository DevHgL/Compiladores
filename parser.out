Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> DECLARATIONS BLOCK
Rule 2     DECLARATIONS -> CONST_DECLARATIONS TYPE_DECLARATIONS VAR_DECLARATIONS
Rule 3     DECLARATIONS -> TYPE_DECLARATIONS VAR_DECLARATIONS
Rule 4     DECLARATIONS -> CONST_DECLARATIONS VAR_DECLARATIONS
Rule 5     DECLARATIONS -> CONST_DECLARATIONS TYPE_DECLARATIONS
Rule 6     DECLARATIONS -> CONST_DECLARATIONS
Rule 7     DECLARATIONS -> TYPE_DECLARATIONS
Rule 8     DECLARATIONS -> VAR_DECLARATIONS
Rule 9     DECLARATIONS -> empty
Rule 10    CONST_DECLARATIONS -> CONST_DEF ID = NUMBER ; CONST_DECLARATIONS
Rule 11    CONST_DECLARATIONS -> CONST_DEF ID = NUMBER ;
Rule 12    TYPE_DECLARATIONS -> TYPE_DEF ID = TYPE ; TYPE_DECLARATIONS
Rule 13    TYPE_DECLARATIONS -> TYPE_DEF ID = TYPE ;
Rule 14    TYPE -> ID
Rule 15    TYPE -> ARRAY [ NUMBER ] OF ID
Rule 16    TYPE -> RECORD FIELD_LIST END
Rule 17    FIELD_LIST -> ID : ID ; FIELD_LIST
Rule 18    FIELD_LIST -> ID : ID
Rule 19    VAR_DECLARATIONS -> VAR_DEF ID_LIST : ID ; VAR_DECLARATIONS
Rule 20    VAR_DECLARATIONS -> VAR_DEF ID_LIST : ID ;
Rule 21    ID_LIST -> ID , ID_LIST
Rule 22    ID_LIST -> ID
Rule 23    BLOCK -> BEGIN COMMAND_LIST END
Rule 24    COMMAND_LIST -> COMMAND ; COMMAND_LIST
Rule 25    COMMAND_LIST -> COMMAND
Rule 26    COMMAND_LIST -> empty
Rule 27    COMMAND -> assignment
Rule 28    COMMAND -> conditional
Rule 29    COMMAND -> loop
Rule 30    COMMAND -> function_call
Rule 31    assignment -> ID ASSIGNMENT EXP
Rule 32    conditional -> IF ( EXP ) THEN BLOCK ELSE BLOCK
Rule 33    conditional -> IF ( EXP ) THEN BLOCK
Rule 34    loop -> WHILE EXP DO BLOCK
Rule 35    function_call -> ID ( ARG_LIST )
Rule 36    ARG_LIST -> EXP , ARG_LIST
Rule 37    ARG_LIST -> EXP
Rule 38    ARG_LIST -> empty
Rule 39    EXP -> EXP + EXP
Rule 40    EXP -> EXP - EXP
Rule 41    EXP -> EXP * EXP
Rule 42    EXP -> EXP / EXP
Rule 43    EXP -> EXP COMP_OP EXP
Rule 44    EXP -> EXP LOGIC_OP_OR EXP
Rule 45    EXP -> EXP LOGIC_OP_AND EXP
Rule 46    EXP -> - EXP
Rule 47    EXP -> ( EXP )
Rule 48    EXP -> ID
Rule 49    EXP -> NUMBER
Rule 50    EXP -> TRUE
Rule 51    EXP -> FALSE
Rule 52    empty -> <empty>

Terminals, with rules where they appear

(                    : 32 33 35 47
)                    : 32 33 35 47
*                    : 41
+                    : 39
,                    : 21 36
-                    : 40 46
/                    : 42
:                    : 17 18 19 20
;                    : 10 11 12 13 17 19 20 24
=                    : 10 11 12 13
ASSIGNMENT           : 31
BEGIN                : 23
COMP_OP              : 43
CONST_DEF            : 10 11
DO                   : 34
ELSE                 : 32
END                  : 16 23
FALSE                : 51
ID                   : 10 11 12 13 14 15 17 17 18 18 19 20 21 22 31 35 48
IF                   : 32 33
LOGIC_OP_AND         : 45
LOGIC_OP_OR          : 44
NUMBER               : 10 11 15 49
RECORD               : 16
THEN                 : 32 33
TRUE                 : 50
TYPE_DEF             : 12 13
VAR_DEF              : 19 20
WHILE                : 34
[                    : 15
]                    : 15
error                : 

Nonterminals, with rules where they appear

ARG_LIST             : 35 36
ARRAY                : 15
BLOCK                : 1 32 32 33 34
COMMAND              : 24 25
COMMAND_LIST         : 23 24
CONST_DECLARATIONS   : 2 4 5 6 10
DECLARATIONS         : 1
EXP                  : 31 32 33 34 36 37 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 47
FIELD_LIST           : 16 17
ID_LIST              : 19 20 21
OF                   : 15
PROGRAM              : 0
TYPE                 : 12 13
TYPE_DECLARATIONS    : 2 3 5 7 12
VAR_DECLARATIONS     : 2 3 4 8 19
assignment           : 27
conditional          : 28
empty                : 9 26 38
function_call        : 30
loop                 : 29

